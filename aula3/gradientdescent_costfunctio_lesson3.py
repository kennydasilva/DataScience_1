# -*- coding: utf-8 -*-
"""GradientDescent_CostFunctio_lesson3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W4y0YbvdKkWPsqf4EUxQvfJA7cL4MEy2
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import sklearn as sk
from sklearn import linear_model

def gradient_descent(x,y):
  m_curr=b_curr=0
  interations=50
  n=len(x)
  learning_rate=0.05

  for i in range(interations):
     y_predicted=m_curr*x+b_curr
     cost=(1/n)*sum([val**2 for val in (y-y_predicted)])
     md=-(2/n)*sum(x*(y-y_predicted))
     bd=-(2/n)*sum(y-y_predicted)
     m_curr=m_curr-learning_rate*md
     b_curr=b_curr-learning_rate*bd
     print("m {},b {}, cost {} iteration {}".format(m_curr,b_curr,cost,i))

x=np.array([1,2,3,4,5])
y=np.array([5,7,9,11,13])

gradient_descent(x,y)

df=pd.read_csv("test_scores.csv")
df

reg=linear_model.LinearRegression()
reg.fit(df[['math']],df.cs)

reg.predict([[50]])

reg.intercept_

def gradient_descent2(X,Y):
  m_curr=reg.coef_
  b_curr=reg.intercept_

  interations=1
  n=len(x)
  learning_rate=0.08

  for i in range(interations):
     y_predicted=m_curr*x+b_curr
     cost=(1/n)*sum([val**2 for val in (y-y_predicted)])
     md=-(2/n)*sum(x*(y-y_predicted))
     bd=-(2/n)*sum(y-y_predicted)
     m_curr=m_curr-learning_rate*md
     b_curr=b_curr-learning_rate*bd
     print("m {},b {}, cost {} iteration {}".format(m_curr,b_curr,cost,i))

x=np.array([44,52,23,99,34])
y=np.array([50,77,89,51,76])

gradient_descent2(x,y)

def gradient_descent2(ma, cs):
    m_curr=0
    b_curr=0
    interations=10
    n=len(x)
    learning_rate=0.08

    for i in range(interations):
      y_predicted=m_curr*x+b_curr
      cost=(1/n)*sum([val**2 for val in (y-y_predicted)])
      md=-(2/n)*sum(x*(y-y_predicted))
      bd=-(2/n)*sum(y-y_predicted)
      m_curr=m_curr-learning_rate
      print(f"Iteração {i + 1}: m = {m_curr:.4f}, b = {b_curr:.4f}, custo = {cost:.4f}")

ma=np.array(df['math'])
cs=np.array(df['cs'])

gradient_descent(ma, cs)

((1.1278061081215996e+118)*50)+1.591431377645465e+116